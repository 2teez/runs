Purpose of the runs Crate
The runs crate will allow you to run Rust documentation tests (doctests) on a standalone .rs file, even if it's not part of a full Cargo project. This is normally not possible using rustc directly, so your crate will handle it by temporarily turning the single file into a valid Cargo project.

üìã Planned Features and Behavior
Take a single .rs source file as input

You specify a path to a standalone .rs file (e.g., runs some_file.rs).

Generate a temporary Cargo project

Create a temporary directory.

Scaffold a minimal Cargo.toml file and a src/lib.rs.

Copy the contents of the input file into src/lib.rs.

Run cargo test --doc on the temporary project

This will compile the temporary crate and run all documentation tests from the input file.

Clean up after itself

After tests run, the temporary directory is deleted.

The original .rs file is left untouched.

Print test results to stdout

Show the same output as cargo test --doc.

üß† Optional or Stretch Features You Might Add Later
Option to keep the temporary project (--keep-temp).

Support for running other types of tests (--unit, --integration).

Auto-detect the crate name or allow custom crate name.

Better error handling and file validation.

üìù Example Workflow
sh
Copy
Edit
runs my_script.rs
Under the hood:

Create runs_temp_project/

Put my_script.rs into runs_temp_project/src/lib.rs

Generate Cargo.toml

Run cargo test --doc

Delete runs_temp_project/ after the test
